# coding: utf-8

"""
    A sample API conforming to the OGC API - Processes - Part 1 standard

    This document is an API definition document provided alongside the OGC API - Processes standard. The OGC API - Processes Standard specifies a processing interface to communicate over a RESTful protocol using JavaScript Object Notation (JSON) encodings. The specification allows for the wrapping of computational tasks into executable processes that can be offered by a server and be invoked by a client application.

    The version of the OpenAPI document: 1.0.0
    Contact: standards-team@ogc.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ogcapi_processes_client.models.inline_or_ref_data import InlineOrRefData

class TestInlineOrRefData(unittest.TestCase):
    """InlineOrRefData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> InlineOrRefData:
        """Test InlineOrRefData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `InlineOrRefData`
        """
        model = InlineOrRefData()
        if include_optional:
            return InlineOrRefData(
                bbox = [
                    1.337
                    ],
                crs = 'http://www.opengis.net/def/crs/OGC/1.3/CRS84',
                media_type = '',
                encoding = '',
                var_schema = None,
                value = None,
                href = '',
                rel = 'service',
                type = 'application/json',
                hreflang = 'en',
                title = ''
            )
        else:
            return InlineOrRefData(
                bbox = [
                    1.337
                    ],
                value = None,
                href = '',
        )
        """

    def testInlineOrRefData(self):
        """Test InlineOrRefData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

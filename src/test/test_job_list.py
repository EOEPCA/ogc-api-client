# coding: utf-8

"""
    A sample API conforming to the OGC API - Processes - Part 1 standard

    This document is an API definition document provided alongside the OGC API - Processes standard. The OGC API - Processes Standard specifies a processing interface to communicate over a RESTful protocol using JavaScript Object Notation (JSON) encodings. The specification allows for the wrapping of computational tasks into executable processes that can be offered by a server and be invoked by a client application.

    The version of the OpenAPI document: 1.0.0
    Contact: standards-team@ogc.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ogc_api_client.models.job_list import JobList

class TestJobList(unittest.TestCase):
    """JobList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> JobList:
        """Test JobList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `JobList`
        """
        model = JobList()
        if include_optional:
            return JobList(
                jobs = [
                    ogc_api_client.models.status_info.statusInfo(
                        process_id = '', 
                        type = 'process', 
                        job_id = '', 
                        status = 'accepted', 
                        message = '', 
                        created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        started = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        finished = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        progress = 0, 
                        links = [
                            ogc_api_client.models.link.link(
                                href = '', 
                                rel = 'service', 
                                type = 'application/json', 
                                hreflang = 'en', 
                                title = '', )
                            ], )
                    ],
                links = [
                    ogc_api_client.models.link.link(
                        href = '', 
                        rel = 'service', 
                        type = 'application/json', 
                        hreflang = 'en', 
                        title = '', )
                    ]
            )
        else:
            return JobList(
                jobs = [
                    ogc_api_client.models.status_info.statusInfo(
                        process_id = '', 
                        type = 'process', 
                        job_id = '', 
                        status = 'accepted', 
                        message = '', 
                        created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        started = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        finished = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        progress = 0, 
                        links = [
                            ogc_api_client.models.link.link(
                                href = '', 
                                rel = 'service', 
                                type = 'application/json', 
                                hreflang = 'en', 
                                title = '', )
                            ], )
                    ],
                links = [
                    ogc_api_client.models.link.link(
                        href = '', 
                        rel = 'service', 
                        type = 'application/json', 
                        hreflang = 'en', 
                        title = '', )
                    ],
        )
        """

    def testJobList(self):
        """Test JobList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

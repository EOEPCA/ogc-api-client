# coding: utf-8

"""
    A sample API conforming to the OGC API - Processes - Part 1 standard

    This document is an API definition document provided alongside the OGC API - Processes standard. The OGC API - Processes Standard specifies a processing interface to communicate over a RESTful protocol using JavaScript Object Notation (JSON) encodings. The specification allows for the wrapping of computational tasks into executable processes that can be offered by a server and be invoked by a client application.

    The version of the OpenAPI document: 1.0.0
    Contact: standards-team@ogc.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ogc_api_client.models.schema_one_of import SchemaOneOf

class TestSchemaOneOf(unittest.TestCase):
    """SchemaOneOf unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SchemaOneOf:
        """Test SchemaOneOf
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SchemaOneOf`
        """
        model = SchemaOneOf()
        if include_optional:
            return SchemaOneOf(
                title = '',
                multiple_of = 0,
                maximum = 1.337,
                exclusive_maximum = True,
                minimum = 1.337,
                exclusive_minimum = True,
                max_length = 0,
                min_length = 0,
                pattern = '',
                max_items = 0,
                min_items = 0,
                unique_items = True,
                max_properties = 0,
                min_properties = 0,
                required = [
                    ''
                    ],
                enum = [
                    null
                    ],
                type = 'array',
                var_not = None,
                all_of = [
                    null
                    ],
                one_of = [
                    null
                    ],
                any_of = [
                    null
                    ],
                items = None,
                properties = {
                    'key' : null
                    },
                additional_properties = None,
                description = '',
                format = '',
                default = None,
                nullable = True,
                read_only = True,
                write_only = True,
                example = None,
                deprecated = True,
                content_media_type = '',
                content_encoding = '',
                content_schema = ''
            )
        else:
            return SchemaOneOf(
        )
        """

    def testSchemaOneOf(self):
        """Test SchemaOneOf"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
